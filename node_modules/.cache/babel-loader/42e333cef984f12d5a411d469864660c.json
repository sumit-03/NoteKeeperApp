{"ast":null,"code":"import _toConsumableArray from \"/home/sumit/Desktop/NoteKeeperApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/sumit/Desktop/NoteKeeperApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sumit/Desktop/NoteKeeperApp/src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  var _this = this;\n\n  var _useState = useState(localStorage.notes),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1]; // console.log(location.state.loggedIn);\n\n\n  function getArray(notesString) {\n    var notesArray = notesString ? JSON.parse(notesString) : [];\n    return notesArray;\n  }\n\n  function addNote(note) {\n    // console.log(note);\n    setNotes(function (prevNotes) {\n      var prevNotesArray = localStorage.notes ? getArray(prevNotes) : [];\n      var newNotes = [].concat(_toConsumableArray(prevNotesArray), [note]);\n      localStorage.notes = JSON.stringify(newNotes);\n      return localStorage.notes;\n    });\n  }\n\n  function removeNote(noteID) {\n    setNotes(function (prevNotes) {\n      var prevNotesArray = localStorage.notes ? getArray(prevNotes) : [];\n      var newNotes = prevNotesArray.filter(function (value, id) {\n        return id + 1 !== noteID;\n      });\n      localStorage.notes = JSON.stringify(newNotes);\n      return localStorage.notes;\n    });\n  } // console.log(notes);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    isLoggedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noteDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Note, {\n    key: 0,\n    id: 0,\n    title: \"Note title\",\n    content: \"Note content\",\n    onDelete: removeNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), getArray(notes).map(function (note, noteID) {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: noteID + 1,\n      id: noteID + 1,\n      title: note.title,\n      content: note.content,\n      onDelete: removeNote,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sumit/Desktop/NoteKeeperApp/src/components/App.jsx"],"names":["React","useState","Header","Footer","Note","CreateArea","App","localStorage","notes","setNotes","getArray","notesString","notesArray","JSON","parse","addNote","note","prevNotes","prevNotesArray","newNotes","stringify","removeNote","noteID","filter","value","id","map","title","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\n\nfunction App() {\n  const [notes, setNotes] = useState(localStorage.notes);\n\n  // console.log(location.state.loggedIn);\n  function getArray(notesString) {\n    const notesArray = notesString ? JSON.parse(notesString) : [];\n    return notesArray;\n  }\n\n  function addNote(note) {\n    // console.log(note);\n    \n    setNotes((prevNotes) => {\n      const prevNotesArray = localStorage.notes ? getArray(prevNotes) : [];\n      const newNotes = [...prevNotesArray, note];\n      localStorage.notes = JSON.stringify(newNotes);\n      return localStorage.notes;\n    }); \n\n    \n     \n  }\n\n  function removeNote(noteID) {\n     setNotes((prevNotes) => {\n        const prevNotesArray = localStorage.notes ? getArray(prevNotes) : [];\n        const newNotes = prevNotesArray.filter((value, id) => {\n          return (id+1) !== noteID;\n        })\n        localStorage.notes = JSON.stringify(newNotes);\n        return localStorage.notes;\n     })\n  }\n\n  // console.log(notes);\n\n  return (\n    <div>\n      <Header isLoggedIn={true} />\n\n      <CreateArea onAdd={addNote} /> \n    \n      <div className=\"noteDiv\" >\n        <Note key={0} id={0} title=\"Note title\" content=\"Note content\" onDelete={removeNote} />\n\n        {\n          getArray(notes).map((note, noteID) => {\n            return <Note key={noteID + 1} id={noteID + 1} title={note.title} content={note.content} onDelete={removeNote} />\n          })\n\n        }\n      </div> \n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}