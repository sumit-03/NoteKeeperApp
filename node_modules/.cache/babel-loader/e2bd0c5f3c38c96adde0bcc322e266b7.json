{"ast":null,"code":"import _toConsumableArray from \"/home/sumit/Desktop/keeperApp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/sumit/Desktop/keeperApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sumit/Desktop/keeperApp/src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport Login from \"./Login\";\nimport EditIconComponent from \"./EditIconComponent\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  var _this = this;\n\n  var _useState = useState(localStorage.notes),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLogin = _useState4[0],\n      setIsLogin = _useState4[1]; // console.log(notes);\n\n\n  function getArray(notesString) {\n    var notesArray = notesString ? JSON.parse(notesString) : [];\n    return notesArray;\n  }\n\n  function addNote(note) {\n    console.log(note);\n    setNotes(function (prevNotes) {\n      var prevNotesArray = localStorage.notes ? getArray(prevNotes) : [];\n      var newNotes = [].concat(_toConsumableArray(prevNotesArray), [note]);\n      localStorage.notes = JSON.stringify(newNotes);\n      return localStorage.notes;\n    });\n  }\n\n  function removeNote(noteID) {\n    setNotes(function (prevNotes) {\n      var prevNotesArray = localStorage.notes ? getArray(prevNotes) : [];\n      var newNotes = prevNotesArray.filter(function (value, id) {\n        return id + 1 !== noteID;\n      });\n      localStorage.notes = JSON.stringify(newNotes);\n      return localStorage.notes;\n    });\n  }\n\n  function checkIsLoggedIn(isLoggedIn) {\n    setIsLogin(isLoggedIn);\n  }\n\n  console.log(notes);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), isLogin === false && /*#__PURE__*/React.createElement(Link, {\n    to: \"/editCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditIconComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), isLogin === false && /*#__PURE__*/React.createElement(Login, {\n    onLogin: checkIsLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }\n  }), isLogin && /*#__PURE__*/React.createElement(CreateArea, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), isLogin && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noteDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Note, {\n    key: 0,\n    id: 0,\n    title: \"Note title\",\n    content: \"Note content\",\n    onDelete: removeNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), getArray(notes).map(function (note, noteID) {\n    return /*#__PURE__*/React.createElement(Note, {\n      key: noteID + 1,\n      id: noteID + 1,\n      title: note.title,\n      content: note.content,\n      onDelete: removeNote,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 22\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sumit/Desktop/keeperApp/src/components/App.jsx"],"names":["React","useState","Header","Footer","Note","CreateArea","Login","EditIconComponent","Link","App","localStorage","notes","setNotes","isLogin","setIsLogin","getArray","notesString","notesArray","JSON","parse","addNote","note","console","log","prevNotes","prevNotesArray","newNotes","stringify","removeNote","noteID","filter","value","id","checkIsLoggedIn","isLoggedIn","map","title","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport Login from \"./Login\";\n\nimport EditIconComponent from \"./EditIconComponent\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  const [notes, setNotes] = useState(localStorage.notes);\n  const [isLogin, setIsLogin] = useState(false);\n\n  // console.log(notes);\n  function getArray(notesString) {\n    const notesArray = notesString ? JSON.parse(notesString) : [];\n    return notesArray;\n  }\n\n  function addNote(note) {\n    console.log(note);\n    \n    setNotes((prevNotes) => {\n      const prevNotesArray = localStorage.notes ? getArray(prevNotes) : [];\n      const newNotes = [...prevNotesArray, note];\n      localStorage.notes = JSON.stringify(newNotes);\n      return localStorage.notes;\n    }); \n\n    \n     \n  }\n\n  function removeNote(noteID) {\n     setNotes((prevNotes) => {\n        const prevNotesArray = localStorage.notes ? getArray(prevNotes) : [];\n        const newNotes = prevNotesArray.filter((value, id) => {\n          return (id+1) !== noteID;\n        })\n        localStorage.notes = JSON.stringify(newNotes);\n        return localStorage.notes;\n     })\n  }\n\n  function checkIsLoggedIn(isLoggedIn) {\n    setIsLogin(isLoggedIn);\n  }\n\n  console.log(notes);\n\n  return (\n    <div>\n      <Header />\n      { isLogin===false &&\n        <Link to=\"/editCode\">\n          <EditIconComponent />\n        </Link>\n      }\n\n      {isLogin===false && <Login onLogin={checkIsLoggedIn} /> }\n\n      { isLogin &&\n        <CreateArea onAdd={addNote} /> \n      }\n      \n      { isLogin &&\n        <div className=\"noteDiv\" >\n          <Note key={0} id={0} title=\"Note title\" content=\"Note content\" onDelete={removeNote} />\n\n          {\n            getArray(notes).map((note, noteID) => {\n              return <Note key={noteID + 1} id={noteID + 1} title={note.title} content={note.content} onDelete={removeNote} />\n            })\n\n          }\n        </div> \n      }\n      \n      \n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}