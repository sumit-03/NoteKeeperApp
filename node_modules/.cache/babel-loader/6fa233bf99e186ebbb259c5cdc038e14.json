{"ast":null,"code":"import _slicedToArray from\"/home/sumit/Desktop/NoteKeeperApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AddIcon from'@material-ui/icons/Add';import Fab from'@material-ui/core/Fab';import{Zoom}from'@material-ui/core';function CreateArea(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isExpanded=_useState2[0],setIsExpanded=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),content=_useState6[0],setContent=_useState6[1];function handleChangeInTitle(event){var newVal=event.target.value;setTitle(newVal);}function handleChangeInContent(event){var newVal=event.target.value;setContent(newVal);}function handleAddItemClick(event){props.onAdd({title:title,content:content});setTitle(\"\");setContent(\"\");event.preventDefault();}function exapndTextArea(){setIsExpanded(true);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{className:\"create-note\"},isExpanded&&/*#__PURE__*/React.createElement(\"input\",{name:\"title\",placeholder:\"Title\",onChange:handleChangeInTitle,value:title}),/*#__PURE__*/React.createElement(\"textarea\",{name:\"content\",placeholder:\"Take a note...\",rows:isExpanded?\"3\":\"1\",onChange:handleChangeInContent,value:content,onFocus:exapndTextArea}),isExpanded&&/*#__PURE__*/React.createElement(Zoom,{in:true},/*#__PURE__*/React.createElement(Fab,{onClick:handleAddItemClick},/*#__PURE__*/React.createElement(AddIcon,null)))));}export default CreateArea;","map":{"version":3,"sources":["/home/sumit/Desktop/NoteKeeperApp/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","isExpanded","setIsExpanded","title","setTitle","content","setContent","handleChangeInTitle","event","newVal","target","value","handleChangeInContent","handleAddItemClick","onAdd","preventDefault","exapndTextArea"],"mappings":"oHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,OAASC,IAAT,KAAqB,mBAArB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,cAAoCL,QAAQ,CAAC,KAAD,CAA5C,wCAAOM,UAAP,eAAmBC,aAAnB,eACA,eAA0BP,QAAQ,CAAC,EAAD,CAAlC,yCAAOQ,KAAP,eAAcC,QAAd,eACA,eAA8BT,QAAQ,CAAC,EAAD,CAAtC,yCAAOU,OAAP,eAAgBC,UAAhB,eAEA,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAClC,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAA5B,CACAP,QAAQ,CAACK,MAAD,CAAR,CAED,CAED,QAASG,CAAAA,qBAAT,CAA+BJ,KAA/B,CAAsC,CACpC,GAAMC,CAAAA,MAAM,CAAGD,KAAK,CAACE,MAAN,CAAaC,KAA5B,CACAL,UAAU,CAACG,MAAD,CAAV,CACD,CAED,QAASI,CAAAA,kBAAT,CAA4BL,KAA5B,CAAmC,CACjCR,KAAK,CAACc,KAAN,CAAY,CACVX,KAAK,CAAEA,KADG,CAEVE,OAAO,CAAEA,OAFC,CAAZ,EAIAD,QAAQ,CAAC,EAAD,CAAR,CACAE,UAAU,CAAC,EAAD,CAAV,CACAE,KAAK,CAACO,cAAN,GACD,CAED,QAAUC,CAAAA,cAAV,EAA2B,CACzBd,aAAa,CAAC,IAAD,CAAb,CACD,CAED,mBACE,4CACE,4BAAM,SAAS,CAAC,aAAhB,EAEGD,UAAU,eAAI,6BAAO,IAAI,CAAC,OAAZ,CAAoB,WAAW,CAAC,OAAhC,CAAwC,QAAQ,CAAEM,mBAAlD,CAAuE,KAAK,CAAEJ,KAA9E,EAFjB,cAIE,gCAAU,IAAI,CAAC,SAAf,CAAyB,WAAW,CAAC,gBAArC,CAAsD,IAAI,CAAGF,UAAU,CAAG,GAAH,CAAS,GAAhF,CAAqF,QAAQ,CAAEW,qBAA/F,CAAsH,KAAK,CAAEP,OAA7H,CAAsI,OAAO,CAAEW,cAA/I,EAJF,CAKGf,UAAU,eACT,oBAAC,IAAD,EAAM,EAAE,CAAE,IAAV,eACE,oBAAC,GAAD,EAAK,OAAO,CAAEY,kBAAd,eACE,oBAAC,OAAD,MADF,CADF,CANJ,CADF,CADF,CAiBD,CAED,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport { Zoom } from '@material-ui/core';\n\nfunction CreateArea(props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  function handleChangeInTitle(event) {\n    const newVal = event.target.value;\n    setTitle(newVal);\n\n  }\n\n  function handleChangeInContent(event) {\n    const newVal = event.target.value;\n    setContent(newVal);\n  }\n\n  function handleAddItemClick(event) {\n    props.onAdd({\n      title: title,\n      content: content\n    });\n    setTitle(\"\");\n    setContent(\"\");\n    event.preventDefault();\n  }\n\n  function  exapndTextArea() {\n    setIsExpanded(true);\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\" >\n\n        {isExpanded && <input name=\"title\" placeholder=\"Title\" onChange={handleChangeInTitle} value={title} /> }\n        \n        <textarea name=\"content\" placeholder=\"Take a note...\" rows= {isExpanded ? \"3\" : \"1\"} onChange={handleChangeInContent} value={content} onFocus={exapndTextArea} />\n        {isExpanded &&\n          <Zoom in={true} >\n            <Fab onClick={handleAddItemClick} >\n              <AddIcon />\n            </Fab>\n          </Zoom> \n        }\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}