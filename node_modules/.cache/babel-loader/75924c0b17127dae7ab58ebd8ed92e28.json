{"ast":null,"code":"import _slicedToArray from \"/home/sumit/Desktop/NoteKeeperApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sumit/Desktop/NoteKeeperApp/src/components/Login.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport { useHistory } from \"react-router-dom\";\nimport LoginButton from \"./LoginButton\";\n\nfunction Login() {\n  var history = useHistory();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSuccessFullLogin = _useState4[0],\n      setIsSuccessFullLogin = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loginCode = _useState6[0],\n      setLoginCode = _useState6[1];\n\n  var _useState7 = useState(localStorage.isVisited),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isVisited = _useState8[0],\n      setIsVisited = _useState8[1];\n\n  function handleInputChange(event) {\n    var newLoginCode = event.target.value;\n    setLoginCode(newLoginCode);\n  }\n\n  function handleClickEvent(event) {\n    if (isVisited) {\n      if (loginCode === localStorage.code) {\n        setIsSuccessFullLogin(1);\n        setMessage(\"SucceFully Logged In\");\n        setLoginCode(\"\"); // take to home screen\n\n        setInterval(function () {\n          setIsSuccessFullLogin(0);\n          history.push('/notes', {\n            loggedIn: true\n          });\n        }, 500);\n      } else {\n        setIsSuccessFullLogin(2);\n        setMessage(\"Enter Correct Code\");\n      }\n    } else {\n      localStorage.code = loginCode;\n      localStorage.isVisited = true;\n      setIsVisited(localStorage.isVisited);\n      setIsSuccessFullLogin(1);\n    }\n\n    setLoginCode(\"\");\n    setInterval(function () {\n      setIsSuccessFullLogin(0);\n    }, 2000);\n  }\n\n  var errorMessageObj = {\n    color: \"red\",\n    display: \"hidden\",\n    marginBottom: \"20px\"\n  };\n\n  if (isSuccessFullLogin === 1) {\n    errorMessageObj.color = \"green\";\n    errorMessageObj.display = \"block\";\n  } else if (isSuccessFullLogin === 2) {\n    errorMessageObj.color = \"red\";\n    errorMessageObj.display = \"block\";\n  } else {\n    errorMessageObj.display = \"none\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    isLoggedIn: false,\n    isEditCode: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: errorMessageObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, message), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"100000000\",\n    max: \"999999999\",\n    onChange: handleInputChange,\n    placeholder: \"Enter 9-digit code\",\n    value: loginCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LoginButton, {\n    text: !isVisited ? \"SET CODE\" : \"LOG IN\",\n    href: \"#\",\n    onClick: handleClickEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/sumit/Desktop/NoteKeeperApp/src/components/Login.jsx"],"names":["React","useState","Header","useHistory","LoginButton","Login","history","message","setMessage","isSuccessFullLogin","setIsSuccessFullLogin","loginCode","setLoginCode","localStorage","isVisited","setIsVisited","handleInputChange","event","newLoginCode","target","value","handleClickEvent","code","setInterval","push","loggedIn","errorMessageObj","color","display","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport {useHistory } from \"react-router-dom\";\nimport LoginButton from \"./LoginButton\";\n\nfunction Login() {\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [isSuccessFullLogin, setIsSuccessFullLogin] = useState(0);\n    const [loginCode, setLoginCode] = useState(\"\");\n    const [isVisited, setIsVisited] = useState(localStorage.isVisited);\n    \n    function handleInputChange(event) {\n        const newLoginCode = event.target.value;\n        setLoginCode(newLoginCode);\n    }\n    \n    function handleClickEvent (event) {\n        if(isVisited) {\n            if(loginCode === localStorage.code) {\n                setIsSuccessFullLogin(1);\n                setMessage(\"SucceFully Logged In\");\n                setLoginCode(\"\");\n                // take to home screen\n                setInterval(() => {\n                    setIsSuccessFullLogin(0);\n                    history.push('/notes', {loggedIn: true});\n                }, 500);\n                \n            } else {\n                setIsSuccessFullLogin(2);\n                setMessage(\"Enter Correct Code\");\n            }\n        } else {\n            localStorage.code = loginCode;\n            localStorage.isVisited = true;\n            setIsVisited(localStorage.isVisited);\n            setIsSuccessFullLogin(1);\n        }\n        setLoginCode(\"\");\n        setInterval(() => {\n            setIsSuccessFullLogin(0);\n        }, 2000);\n    }\n\n\n    const errorMessageObj = {\n        color: \"red\",\n        display: \"hidden\",\n        marginBottom: \"20px\" \n    }\n\n    if(isSuccessFullLogin === 1) {\n        errorMessageObj.color = \"green\";\n        errorMessageObj.display = \"block\";\n    } else if(isSuccessFullLogin === 2){\n        errorMessageObj.color = \"red\";\n        errorMessageObj.display = \"block\";\n    } else {\n        errorMessageObj.display = \"none\";\n    }\n\n\n    return <div>\n        <Header isLoggedIn={false} isEditCode={false} />\n        {/* { \n            isSuccessFullLogin!==1 &&\n            <Link to=\"/editCode\">\n                <EditIconComponent />\n            </Link>\n        } */}\n        <div className=\"login-form\" >\n            <p style={errorMessageObj} >{message}</p>\n            <input type=\"number\" min=\"100000000\" max=\"999999999\" onChange={handleInputChange} placeholder=\"Enter 9-digit code\" value={loginCode} ></input>\n            \n            <LoginButton text={!isVisited ? \"SET CODE\" : \"LOG IN\"} href=\"#\" onClick={handleClickEvent}/>\n        </div>\n    </div> \n    \n    \n    \n    \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}