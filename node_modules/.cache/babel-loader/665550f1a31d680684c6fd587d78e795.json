{"ast":null,"code":"import _slicedToArray from \"/home/sumit/Desktop/NoteKeeperApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sumit/Desktop/NoteKeeperApp/src/components/EditCode.jsx\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport LoginButton from \"./LoginButton\";\n\nfunction EditCode(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      pcode = _useState2[0],\n      setPCode = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ncode = _useState4[0],\n      setNCode = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEdit = _useState6[0],\n      setIsEdit = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n\n    if (name === \"new\") {\n      setNCode(value);\n    } else {\n      setPCode(value);\n    }\n  }\n\n  function handleEditClickEvent() {\n    var val = localStorage.code;\n\n    if (val !== undefined && val.length === 9 && val === pcode) {\n      localStorage.code = ncode;\n      setMessage(\"SuccessFully Changed the code\");\n      setIsEdit(1);\n    } else {\n      setMessage(\"IN-VALID ATTEMPT! TRY AGAIN\");\n      setIsEdit(2);\n    }\n\n    setTimeout(function () {\n      setIsEdit(0);\n    }, 2500);\n  }\n\n  var errorMessageObj = {\n    color: \"red\",\n    display: \"hidden\",\n    marginBottom: \"20px\"\n  };\n\n  if (isEdit === 1) {\n    errorMessageObj.color = \"green\";\n    errorMessageObj.display = \"block\";\n  } else if (isEdit === 2) {\n    errorMessageObj.color = \"red\";\n    errorMessageObj.display = \"block\";\n  } else {\n    errorMessageObj.display = \"none\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    isLoggedIn: false,\n    isEditCode: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: errorMessageObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, message), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"prev\",\n    type: \"number\",\n    min: \"100000000\",\n    max: \"999999999\",\n    onChange: handleInputChange,\n    placeholder: \"Enter 9-digit previous code\",\n    value: pcode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"new\",\n    type: \"number\",\n    min: \"100000000\",\n    max: \"999999999\",\n    onChange: handleInputChange,\n    placeholder: \"Enter 9-digit new code\",\n    value: ncode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LoginButton, {\n    text: \"EDIT CODE\",\n    href: \"#\",\n    onClick: handleEditClickEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default EditCode;","map":{"version":3,"sources":["/home/sumit/Desktop/NoteKeeperApp/src/components/EditCode.jsx"],"names":["React","useState","Header","LoginButton","EditCode","props","pcode","setPCode","ncode","setNCode","isEdit","setIsEdit","message","setMessage","handleInputChange","event","target","name","value","handleEditClickEvent","val","localStorage","code","undefined","length","setTimeout","errorMessageObj","color","display","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport LoginButton from \"./LoginButton\";\n\n\nfunction EditCode(props) {\n\n    const [pcode, setPCode] = useState(\"\");\n    const [ncode, setNCode] = useState(\"\");\n    const [isEdit, setIsEdit] = useState(0);\n    const [message, setMessage] = useState(\"\");\n\n    function handleInputChange(event) {\n        const {name, value} = event.target;\n        if(name === \"new\") {\n            setNCode(value);\n        } else {\n            setPCode(value);\n        }\n        \n    }\n\n\n    function handleEditClickEvent() {\n        const val = localStorage.code;\n        if((val !== undefined) && (val.length === 9) && (val === pcode)) {\n            localStorage.code = ncode;\n            setMessage(\"SuccessFully Changed the code\");\n            setIsEdit(1);\n        } else {\n            setMessage(\"IN-VALID ATTEMPT! TRY AGAIN\");\n            setIsEdit(2);\n            \n        }\n        setTimeout(() => {\n            setIsEdit(0);\n        }, 2500);\n    }\n\n    const errorMessageObj = {\n        color: \"red\",\n        display: \"hidden\",\n        marginBottom: \"20px\" \n    }\n\n    if(isEdit === 1) {\n        errorMessageObj.color = \"green\";\n        errorMessageObj.display = \"block\";\n    } else if(isEdit === 2){\n        errorMessageObj.color = \"red\";\n        errorMessageObj.display = \"block\";\n    } else {\n        errorMessageObj.display = \"none\";\n    }\n\n    return <div>\n        <Header isLoggedIn={false} isEditCode={true} />\n        <div className=\"edit-form\" >\n            \n            <p style={errorMessageObj} >{message}</p>\n            <input name=\"prev\" type=\"number\" min=\"100000000\" max=\"999999999\" onChange={handleInputChange} placeholder=\"Enter 9-digit previous code\" value={pcode} ></input>\n            <input name=\"new\" type=\"number\" min=\"100000000\" max=\"999999999\" onChange={handleInputChange} placeholder=\"Enter 9-digit new code\" value={ncode} ></input>\n            \n            {/* <button type=\"button\" onClick={handleEditClickEvent} >EDIT CODE</button> */}\n            <LoginButton text={\"EDIT CODE\"} href=\"#\" onClick={handleEditClickEvent}/>\n        </div>    \n    </div>;\n        \n    \n}\n\nexport default EditCode;"]},"metadata":{},"sourceType":"module"}